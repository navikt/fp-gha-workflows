name: "Build and push docker images"
description: "Build and push docker images using docker bake"
inputs:
  build-version:
    description: "Image tag for the docker image"
    required: true
  namespace:
    required: false
    description: "NAV team"
    default: "teamforeldrepenger"
  push-image:
    required: false
    description: "Push the docker image (true|false)"
    default: "false"
  bake-platform:
    required: false
    description: Platform to target
    default: "linux/amd64,linux/arm64"
  bake-target:
    required: true
    description: Bake target
  github-token:
    description: "Token to use when signing into ghcr.io for cacheing purposes"
    required: true
  auth-token:
    description: "Token to use when installing packages from npm"
    required: true
runs:
  using: "composite"
  steps:
    - name: Login to GitHub Packages Docker Registry # Brukes ifm lagring og henting av cache
      uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ inputs.github-token }}
    - name: Set up QEMU
      uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # ratchet:docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # ratchet:docker/setup-buildx-action@v2
    - name: NAIS login
      uses: nais/login@e7cf2c159677dc7c7d599feff5f808f2bf59c7cf # ratchet:nais/login@v0
      id: login
      with:
        team: ${{ inputs.namespace }}
    - name: Docker meta
      uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # ratchet:docker/metadata-action@v4
      id: meta
      with:
        context: git
        images: ${{ steps.login.outputs.registry }}/${{ github.repository }}/${{ inputs.bake-target }}
        tags: |
          type=raw,value=${{ inputs.build-version }}
          # set latest tag for default branch (master)
          type=raw,value=latest,enable={{is_default_branch}}
    - name: Generate cache tags
      shell: bash
      id: generate-cache-tags
      env:
        GITHUB_REF_NAME: ${{ github.ref_name }}
      run: |
        GITHUB_REF_NAME=${GITHUB_REF_NAME//\//_}
        echo "cache-tag=$GITHUB_REF_NAME" >> $GITHUB_OUTPUT
    - name: Print current branch
      shell: bash
      run: |
        echo "Checked out branch: $(git rev-parse --abbrev-ref HEAD)"
    - name: Build and push with bake
      uses: docker/bake-action@37816e747588cb137173af99ab33873600c46ea8 # ratchet:docker/bake-action@v6.8.0
      id: build_push
      env:
        CACHE_TAG: ${{ steps.generate-cache-tags.outputs.cache-tag }}
        PACKAGES_AUTH_TOKEN: ${{ inputs.auth-token }}
      with:
        source: .
        no-cache: ${{ github.event.pull_request.user.login == 'dependabot[bot]' }}
        targets: ${{ inputs.bake-target }}
        push: ${{ inputs.push-image }}
        files: |
          ./docker-bake.hcl
          cwd://${{ steps.meta.outputs.bake-file }}
        set: |
          *.platform=${{ inputs.bake-platform }}
          *.secrets=id=PACKAGES_AUTH_TOKEN

    - name: Hent digest from docker/bake-action metadata
      if: inputs.push-image == 'true'
      shell: bash
      id: digest_step
      run: |
        echo "digest=$(echo '${{ steps.build_push.outputs.metadata }}' | jq -r '.[]."containerimage.digest"')" >> $GITHUB_OUTPUT

    - name: Generate SBOM, attest and sign image
      if: inputs.push-image == 'true'
      uses: nais/attest-sign@1dc00d2e3e22d2538cdfd9c28581e0616887f0e7 # ratchet:nais/attest-sign@v1.5.14
      env:
        TRIVY_JAVA_DB_REPOSITORY: "public.ecr.aws/aquasecurity/trivy-java-db:1"
      with:
        image_ref: ${{ steps.login.outputs.registry }}/${{ github.repository }}/${{ inputs.bake-target }}@${{ steps.digest_step.outputs.digest }}
