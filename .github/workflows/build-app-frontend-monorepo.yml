name: Build app
on:
  workflow_call:
    inputs:
      runs-on:
        required: false
        type: string
        description: MiljÃ¸ versjon som skal brukes til bygg.
        default: 'ubuntu-latest'
      node-version:
        required: false
        type: string
        description: Node version som brukes.
        default: '18.8.0'
      pnpm-version:
        required: false
        type: string
        description: PNPM version som skal brukes.
        default: '8'
      build-image:
        required: false
        type: boolean
        description: Skal docker image bygges?
        default: true
      push-image:
        required: false
        type: boolean
        description: Skal docker image pushes?
        default: false
      image_suffix:
        required: true
        type: string
        description: Hvilken app skal bygges under ./apps/ mappa
    outputs:
      build-version:
        description: "Build version"
        value: ${{ jobs.build-and-test.outputs.build-version }}
jobs:
  build-and-test:
    name: Build and test
    permissions:
      packages: write
      id-token: write
    runs-on: ${{ (github.event.pull_request.user.login == 'dependabot[bot]' && 'ubuntu-latest') || inputs.runs-on }}
    env:
      TZ: "Europe/Oslo"
    outputs:
      build-version: ${{ steps.generate-build-version.outputs.build-version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # ratchet:actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up NODE
        uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # ratchet:actions/setup-node@v3
        with:
          node-version: ${{ inputs.node-version }}
      - uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # ratchet:pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: ${{ inputs.pnpm-version }}
          run_install: false
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      - uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # ratchet:actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install dependencies
        working-directory: ./apps/${{ inputs.image_suffix }}
        run: pnpm install --frozen-lockfile
      - name: Run tests
        working-directory: ./apps/${{ inputs.image_suffix }}
        run: pnpm exec turbo test
      - name: Run build
        if: inputs.build-image
        working-directory: ./apps/${{ inputs.image_suffix }}
        run: pnpm exec turbo build
      - name: Generate build version
        id: generate-build-version
        run: echo "build-version=$(date +%Y.%m.%d.%H%M%S)-$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_OUTPUT
      - name: Print build version
        run: echo "Generated build-version is ${{ steps.generate-build-version.outputs.build-version }}"
      - name: Bygg og push docker image
        if: inputs.build-image
        uses: navikt/fp-gha-workflows/.github/actions/build-push-docker-image@main # ratchet:exclude
        with:
          build-version: ${{ steps.generate-build-version.outputs.build-version }}
          push-image: ${{ inputs.push-image }}
          docker_context: ./apps/${{ inputs.image_suffix }}/
          image_suffix: /${{ inputs.image_suffix }}
