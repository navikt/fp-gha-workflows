name: Build app

on:
  workflow_call:
    inputs:
      runs-on:
        required: false
        type: string
        description: Miljø versjon som skal brukes til bygg.
        default: 'ubuntu-latest'
      node-version:
        required: false
        type: string
        description: Node version som brukes.
        default: '18.8.0'
      legacy-peer-deps:
        required: false
        type: string
        description: Skal legge på --legacy-peer-deps ved npm install.
        default: true
      build-image:
        required: false
        type: boolean
        description: Skal docker image bygges?
        default: true
      push-image:
        required: false
        type: boolean
        description: Skal docker image pushes?
        default: false
      clean-install:
        required: false
        type: boolean
        description: Kjøre clean install?
        default: false
    outputs:
      build-version:
        description: "Build version"
        value: ${{ jobs.build-and-test.outputs.build-version }}

jobs:
  build-and-test:
    name: Build and test
    runs-on: ${{ (github.actor == 'dependabot[bot]' && 'ubuntu-latest') || inputs.runs-on }}
    env:
      TZ: "Europe/Oslo"
    outputs:
      build-version: ${{ steps.generate-build-version.outputs.build-version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3.3.0
        with:
          fetch-depth: 0

      - name: Set up NODE med npm
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.node-version }}
          registry-url: https://npm.pkg.github.com/
          scope: '@navikt'
          cache: "npm"

      - name: clean install
        if: inputs.clean-install
        run: npm ci

      - run: npm install --legacy-peer-deps
      - run: npm run jest
      - run: npm run build

      - name: Generate build version
        id: generate-build-version
        run: echo "build-version=$(date +%Y.%m.%d.%H%M%S)-$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_OUTPUT

      - name: Print build version
        run: echo "Generated build-version is ${{ steps.generate-build-version.outputs.build-version }}"

      - name: Bygg og push docker image
        if: inputs.build-image
        uses: navikt/fp-gha-workflows/.github/actions/build-push-docker-image@action/cleanup
        with:
          build-version: ${{ steps.generate-build-version.outputs.build-version }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          push-image: ${{ inputs.push-image }}





