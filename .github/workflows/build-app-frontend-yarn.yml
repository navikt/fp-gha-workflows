name: Build app

on:
  workflow_call:
    inputs:
      runs-on:
        required: false
        type: string
        description: MiljÃ¸ versjon som skal brukes til bygg.
        default: 'ubuntu-latest'
      node-version:
        required: false
        type: string
        description: Node version som brukes.
        default: '18.8.0'
      build-image:
        required: false
        type: boolean
        description: Skal docker image bygges?
        default: true
      push-image:
        required: false
        type: boolean
        description: Skal docker image pushes?
        default: false
    outputs:
      build-version:
        description: "Build version"
        value: ${{ jobs.build-and-test.outputs.build-version }}


jobs:
  setup-runner:
    uses: navikt/fp-gha-workflows/.github/workflows/setup-runner.yml@rydding
    with:
      runs-on: ${{ inputs.runs-on }}

  build-and-test:
    name: Build and test
    needs: [setup-runner]
    runs-on: ${{ needs.setup-runner.outputs.runner }}
    env:
      TZ: "Europe/Oslo"
    outputs:
      build-version: ${{ steps.generate-build-version.outputs.build-version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3.3.0
        with:
          fetch-depth: 0

      - name: Sette yarn-config
        run: |
          yarn config set npmScopes.navikt.npmRegistryServer "https://npm.pkg.github.com"
          yarn config set npmScopes.navikt.npmAlwaysAuth true
          yarn config set npmScopes.navikt.npmAuthToken $NPM_AUTH_TOKEN
        env:
          NPM_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}

      - name: Set up NODE med yarn
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.node-version }}
          cache: 'yarn'
          cache-dependency-path: |
            node_modules/.cache/nx
            yarn.lock

      - name: Installere dependencies
        run: yarn install --immutable

      - name: Build
        run: yarn build

      - name: Run linting
        run: yarn stylelint && yarn eslint:changed && yarn tsc:changed

      - name: Run tests
        id: run-tests
        run: yarn test:changed

      - name: Opprett release med Sentry
        if: github.ref_name == 'master'
        run: yarn sentry-release
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}

      - name: Bygg server
        run: cd ./server && yarn install --immutable

      - name: Generate build version
        id: generate-build-version
        run: |
          echo "build-version=$(date +%Y.%m.%d.%H%M%S)-$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_OUTPUT

      - name: Print build version
        run: echo "Generated build-version is ${{ steps.generate-build-version.outputs.build-version }}"

      - name: Login to GitHub Packages Docker Registry
        if: (inputs.build-image && inputs.push-image)
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        if: inputs.build-image
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        if: inputs.build-image
        uses: docker/setup-buildx-action@v2

      - name: Build and push
        if: inputs.build-image
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64, linux/arm64
          pull: true
          push: ${{ inputs.push-image }}
          tags: ghcr.io/${{ github.repository }}:${{ steps.generate-build-version.outputs.build-version }}, ghcr.io/${{ github.repository }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Archive code coverage results
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage-report
          path: coverage



