name: Build app

on:
  workflow_call:
    inputs:
      runs-on:
        required: false
        type: string
        description: Miljø versjon som skal brukes til bygg.
        default: 'ubuntu-latest'
      node-version:
        required: false
        type: string
        description: Node version som brukes.
        default: '18.8.0'
      build-image:
        required: false
        type: boolean
        description: Skal docker image bygges?
        default: true
      push-image:
        required: false
        type: boolean
        description: Skal docker image pushes?
        default: false
    outputs:
      build-version:
        description: "Build version"
        value: ${{ jobs.build-and-test.outputs.build-version }}


jobs:
  setup-runner:
    runs-on: ubuntu-latest
    outputs:
      runner: ${{ steps.runner.outputs.runner }}
    steps:
      - name: Sjekk branch
        id: runner
        run: |
          if [ ${{ github.ref }} == 'dependabot[bot]' ]; then
            echo "runner=ubuntu-latest" >> $GITHUB_OUTPUT
          else
            echo "runner=${{ inputs.runs-on }}" >> $GITHUB_OUTPUT
          fi


  build-and-test:
    name: Build and test
    needs: [setup-runner]
    runs-on: ${{ needs.setup-runner.outputs.runner }}
    env:
      TZ: "Europe/Oslo"
    outputs:
      build-version: ${{ steps.generate-build-version.outputs.build-version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3.3.0
        with:
          fetch-depth: 0
      - name: Set up NODE med yarn
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.node-version }}
          registry-url: https://npm.pkg.github.com/
          scope: '@navikt'
          cache: 'yarn'

      - name: Installere dependencies
        if: github.actor != 'dependabot[bot]'
        run: yarn install --ignore-optional --no-progress --frozen-lockfile
        env:
          NODE_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}

      - name: Installere dependencies
        if: github.actor == 'dependabot[bot]'
        run: yarn install --ignore-optional --no-progress --frozen-lockfile
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run linting
        run: yarn less:lint && yarn lint && yarn ts-check

      - name: Henter ut filer som har endret seg
        if: github.ref_name == 'master'
        run: echo "FILES_CHANGED=$(echo $(git diff --name-only ${{github.event.before}} ${{github.sha}}))" >> $GITHUB_ENV

      - name: Henter ut filer som har endret seg på branch
        if: github.ref_name != 'master'
        run: echo "FILES_CHANGED=$(echo $(git diff --name-only origin/master ${{github.sha}}))" >> $GITHUB_ENV

      - name: Run all test and coverage when changes to dependencies
        if: contains(fromJson('["yarn.lock"]'), env.FILES_CHANGED)
        id: run-all-tests
        run: yarn test:coverage

      - name: Run test and coverage only related to changes
        if: steps.run-all-tests.outcome == 'skipped' && github.ref_name == 'master'
        run: |
          echo "Kjøre tester basert på endringene mellom commit og master ${{ github.event.before }}"
          yarn test:coverage --changedSince=${{ github.event.before }}

      - name: Run test and coverage only related to changes på branch
        if: steps.run-all-tests.outcome == 'skipped' && github.ref_name != 'master'
        run: |
          echo "Kjøre tester basert på endringene mellom commit og master ${{ github.event.before }}"
          yarn test:coverage --changedSince=origin/master

      - name: Build
        if: github.ref_name == 'master'
        run: yarn build

      - name: Opprett release med Sentry
        if: github.ref_name == 'master'
        run: yarn sentry-release
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}

      - name: Bygg server
        if: github.actor != 'dependabot[bot]'
        run: cd ./server && yarn install --ignore-optional --no-progress --frozen-lockfile
        env:
          NODE_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}

      - name: Bygg server
        if: github.actor == 'dependabot[bot]'
        run: cd ./server && yarn install --ignore-optional --no-progress --frozen-lockfile
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate build version
        id: generate-build-version
        run: |
          echo "build-version=$(date +%Y.%m.%d.%H%M%S)-$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_OUTPUT

      - name: Print build version
        run: echo "Generated build-version is ${{ steps.generate-build-version.outputs.build-version }}"

      - name: Login to GitHub Packages Docker Registry
        if: (inputs.build-image && inputs.push-image)
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        if: inputs.build-image
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        if: inputs.build-image
        uses: docker/setup-buildx-action@v2

      - name: Build and push
        if: inputs.build-image
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64, linux/arm64
          pull: true
          push: ${{ inputs.push-image }}
          tags: ghcr.io/${{ github.repository }}:${{ steps.generate-build-version.outputs.build-version }}, ghcr.io/${{ github.repository }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Archive code coverage results
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage-report
          path: coverage



