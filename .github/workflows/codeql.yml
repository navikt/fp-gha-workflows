name: "CodeQL"

on:
  workflow_call:
    inputs:
      java-version:
        required: false
        type: string
        description: Java SDK versjon som skal brukes.
        default: '17'
      use-reader:
        required: false
        type: boolean
        description: Hvilket token skal brukes?
        default: false

jobs:
  analyze:
    name: Analyze code
    if: github.actor != 'dependabot[bot]'
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - uses: actions/checkout@v3

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: java

      - name: Create maven .m2 settings for GITHUB
        if: ${{ !inputs.use-reader }}
        uses: whelk-io/maven-settings-xml-action@v21
        with:
          repositories: '[{"id": "github", "name": "github", "url": "https://maven.pkg.github.com/${{ github.repository }}",
              "releases": { "enabled": "true" }, "snapshots": { "enabled": "false" }}]'
          servers: '[{ "id": "github", "username": "${{ github.actor }}", "password": "${{ secrets.GITHUB_TOKEN}}" }]'
          output_file: settings.xml

      - name: Create maven .m2 settings for READER
        if: inputs.use-reader
        uses: whelk-io/maven-settings-xml-action@v21
        with:
          repositories: '[{"id": "github", "name": "github", "url": "https://maven.pkg.github.com/${{ github.repository }}",
              "releases": { "enabled": "true" }, "snapshots": { "enabled": "false" }}]'
          servers: '[{ "id": "github", "username": "${{ github.actor }}", "password": "${{ secrets.READER_TOKEN}}" }]'
          output_file: settings.xml

      - name: Set up JDK-${{ inputs.java-version }} with cache
        uses: actions/setup-java@v3
        with:
          java-version: ${{ inputs.java-version }}
          distribution: 'temurin'
          cache: 'maven'

      - name: Generate build version
        id: generate-build-version
        run: |
          echo "build-version=$(date +%Y.%m.%d.%H%M%S)-$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_OUTPUT

      - name: Print build version
        run: echo "Generated build-version is ${{ steps.generate-build-version.outputs.build-version }}"

      - name: Build artifacts
        run: |
          echo "Building artifacts ${{ steps.generate-build-version.outputs.build-version }}"
          mvn versions:set -DnewVersion="${{ steps.generate-build-version.outputs.build-version }}" -s settings.xml -q -e -B
          mvn install -s settings.xml -q -e -B -DskipTests

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          category: "/language:java"


