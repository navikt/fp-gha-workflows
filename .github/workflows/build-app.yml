name: Build app

on:
  workflow_call:
    inputs:
      runs-on:
        required: false
        type: string
        description: Miljø versjon som skal brukes til bygg.
        default: 'ubuntu-latest'
      t-2c:
        required: false
        type: string
        description: Tråd konfig til maven.
        default: ''
      java-version:
        required: false
        type: string
        description: Java SDK versjon som skal brukes.
        default: '17'
      sonar-scan:
        required: false
        type: boolean
        description: Skal sonar scan brukes?
        default: true
      build-image:
        required: false
        type: boolean
        description: Skal docker image bygges?
        default: true
      push-image:
        required: false
        type: boolean
        description: Skal docker image pushes?
        default: false
    outputs:
      build-version:
        description: "Build version"
        value: ${{ jobs.build-and-test.outputs.build-version }}

jobs:
  build-and-test:
    name: Build and test
    permissions:
      contents: read
      packages: write
      id-token: write
    runs-on: ${{ (github.actor == 'dependabot[bot]' && 'ubuntu-latest') || inputs.runs-on }}
    env:
      TZ: "Europe/Oslo"
    outputs:
      build-version: ${{ steps.build-and-test.outputs.build-version }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # checkout gir shallow copy - fetch-depth: 0 vil tilgjengeliggjøre tags

      - name: Login to GitHub Packages Docker Registry
        uses: docker/login-action@465a07811f14bebb1938fbed4728c6a1ff8901fc
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and start Oracle database
        id: oracle
        run: |
          echo "Henter og starter Oracle image"
          cd .oracle
          docker-compose up --quiet-pull > nohup.out 2>&1 &
          sh -c 'tail -n +0 -f nohup.out | { sed "/Database opened./q" && kill $$; }' || true

      - name: Setup java and maven
        uses: navikt/fp-gha-workflows/.github/actions/setup-java-and-maven@main
        with:
          github-token: ${{ (github.actor != 'dependabot[bot]' && secrets.READER_TOKEN) || secrets.GITHUB_TOKEN }}
          java-version: ${{ inputs.java-version }}

      - name: Maven install and test
        id: build-and-test
        uses: navikt/fp-gha-workflows/.github/actions/build-maven-application@main
        with:
          t-2c: ${{ inputs.t-2c }}

      - name: Sonar analyse
        if: (inputs.sonar-scan && github.actor != 'dependabot[bot]')
        run: |
          mvn jacoco:report jacoco:report-aggregate sonar:sonar -s settings.xml ${{ inputs.t-2c }} -e -q -B -Djacoco.destFile=$(pwd)/target/jacoco.exec -Psonar
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Bygg og push docker image
        if: inputs.build-image
        uses: navikt/fp-gha-workflows/.github/actions/build-push-docker-image@main
        with:
          build-version: ${{ steps.build-and-test.outputs.build-version }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          push-image: ${{ inputs.push-image }}
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}

      - name: Clean up generated stuff before caching
        run: |
          rm ~/.m2/repository/no/nav/foreldrepenger -r
